#!/usr/bin/env python

import argparse
import sys
import time

import eedd

def read_to_file(ei, filename):
    
    start_time = time.time() 
    with open(filename, "wb") as fp:
        for address in range(0,0x2000,128):
            fp.write(ei.read_bytes(address, 128))
    end_time = time.time() 
    print_output(start_time, end_time, address+128)

def read_to_stdout(ei):

    start_time = time.time() 
    for address in range(0,0x2000,128):
        bytes_ = ei.read_bytes(address, 128)
        sys.stdout.write(bytes_)
    end_time = time.time() 
    print_output(start_time, end_time, address+128)
            
def write_from_file(ei, filename):
    start_time = time.time() 
    with open(filename, "rb") as fp:
        data = fp.read()
    for address, byte in enumerate(data):
        ei.write_byte(address, byte)
    end_time = time.time() 
    print_output(start_time, end_time, address)

def fast_write_from_file(ei, filename):
   
    start_time = time.time() 
    address = 0
    with open(filename, "rb") as fp:
        while True:
            data = fp.read(64)
            if len(data) == 0:
                break
            ei.write_bytes(address, data)
            address += len(data)
            if address > 0x1FFF:
                break
    end_time = time.time() 
    print_output(start_time, end_time, address)

def print_output(start_time, end_time, size):
    duration = end_time - start_time
    if size < 1024:
        nice_size = "%d B" % size
    else:
        nice_size = "%.2f kB" % (size/1024.0)
    print "%d bytes (%s) copied, %.2f s, %.2f b/s" % (size, nice_size, duration, size/duration)

def main():

    parser = argparse.ArgumentParser(description="Talk to EEPROM")
    parser.add_argument("action", metavar='action', type=str,
        help="""Action: "read" or "write" """)
    parser.add_argument("--serial", metavar='sd', type=str,
        help="Serial port, e.g. /dev/ttyACM0")
    parser.add_argument("--file", metavar='fd', type=str,
        help="File device e.g. ~/romdump")
    args = parser.parse_args()
    args = vars(args) 

    if args["action"] and (args["serial"] or args["file"]):
        ei = eedd.EepromInterface(args["serial"], 57600)
        if args["action"] == "read":
            if args["file"]:
                read_to_file(ei, args["file"])
            else:
                read_to_stdout(ei)
        elif args["action"] == "write":
            write_from_file(ei, args["file"])
        elif args["action"] == "fast_write":
            fast_write_from_file(ei, args["file"])
        elif args["action"] == "clear":
            ei.clear_chip()

if __name__ == "__main__":
    main()
